namespace Dapper.FastCrud.Mappings
{
    using System;
    using System.Threading;

    /// <summary>
    /// Discovers the orm mapping for a particular entity type.
    /// </summary>
    internal class AutoGeneratedEntityMapping<TEntity>
    {
        private readonly Lazy<EntityMapping> _entityMapping;

        /// <summary>
        /// Default constructor
        /// </summary>
        public AutoGeneratedEntityMapping()
        {
            _entityMapping = new Lazy<EntityMapping>(this.DiscoverEntityMapping, LazyThreadSafetyMode.PublicationOnly);
        }

        /// <summary>
        /// Returns the auto-generated mapping registration
        /// </summary>
        public EntityMapping AutoGeneratedRegistration => _entityMapping.Value;

        private EntityMapping DiscoverEntityMapping()
        {
            var entityType = typeof(TEntity);
            var entityRegistration = new EntityMapping(entityType);
            var currentConventions = OrmConfiguration.Conventions;

            entityRegistration.TableName = currentConventions.GetTableName(entityType);
            entityRegistration.SchemaName = currentConventions.GetSchemaName(entityType);
            entityRegistration.DatabaseName = currentConventions.GetDatabaseName(entityType);

            foreach (var propDescriptor in currentConventions.GetEntityProperties(entityType))
            {
                var propMapping = entityRegistration.SetProperty(propDescriptor);
                currentConventions.ConfigureEntityPropertyMapping(new PropertyMapping<TEntity>(propMapping));
            }

            return entityRegistration;
        }
    }
}
